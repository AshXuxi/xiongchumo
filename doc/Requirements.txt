题目:Mini Cpp 语言 IDE 开发
实现一种自定义编程语言 Mini Cpp 的编辑、解释运行、调试功能,并提供 GUI 的 IDE 工具。Mini T 语言
是 C++语言的一个子集变种,包含的语言特性如下(<**>内的文字代表与 C++不同的地方):
1. 定义类型
a) 全局函数、全局变量、局部变量、立即数、字符串常量
b) static 关键字、const 关键字
<*c) 支持变长数组、字典初始化定义*>
d) 整型数支持 10、8、16 三种进制的表示方式,<*不支持浮点数*>
<*e) 支持 struct(但不支持 struct 内嵌函数)*>
<*f) 不支持 enum、class、template*>
<*g) 不支持宏定义和宏操作*>
2. 基本类型
a) 基本类型
i. 整型:int(32 位有符号),<*不支持无符号数*>
ii. 布尔类型,bool(true/false,实现方式自定)
<*iii. char(字符类型,无符号)*>
<*iv. string(字符串类型,具体实现方式可以自选)*>
<*v. null,无类型空值(注意:不等同于 C++的 NULL 指针)。*>
b) 组合类型:
i. 数组,等同于 C 语言的数组
<*ii. 字典,任意类型的“键/值”对的集合(键不重复)*>
<*c)不支持指针类型*>
3. 运算符:
a) 算术运算符
i. 四则运算:+, -, *, /, %
ii. 位运算:~, ^, &, |
iii. 逻辑运算: &&, ||, <, >, >=, <=, ==
<*b)连接运算符+(实现方式自定)
i. 字符串连接操作
ii. 数组、字典合并操作*>
c)通用运算符
i.赋值运算: =,与 C++语言相同,允许 x=y=z 的形式。对字符串、数组和字典的赋值见要
求
ii.自操作运算符:+=, -=, *=, /=, %=, ~=, ^=, &=, |=, &&=, ||=,
iii.优先级操作:()
d)数组下标操作:[](对于数组是取对应下标位置元素的操作,但是对于字符串,则是取对应位置
字符的操作,返回值为 word 类型)
<*e) 字典操作:{},X{key}表示在字典 X 中查找,无该键值时返回 null*>
f) 优先级
i.所有运算符优先级与 C++语言相同,<*“{}”与“[]”相同*>
4. 表达式
a) 支持算术表达式、逻辑表达式
b) 类型转换
i. 支持整型数和字符串之间的相互转换
ii. 支持布尔类型和字符串之间的相互转换
<*iii. 不支持其他转换*>
5. 控制逻辑
a) if (...) {} else {}
b) while (...) {}
c) do {} while (...)
d) for(初始化语句;终止条件;步进语句) {}
<*e) for(element : array) {} : 对数组按照下标顺序遍历,*>
<*f) for(key, value : map) {} : 对字典遍历,每次返回一对 key 和 value*>
6. 内置函数
<*a)print x1, x2, x3, x4, ...(参数个数不限,print 函数会将每个参数依次打印出来,字符串保持原
样输出,整型数按照一般规则输出,数组和集合不能作为参数)*>
<*b)read x1, x2, x3, x4, ... (参数个数不限,read 函数会根据参数类型从标准输入中读取输入,并给
参数赋值)*>
<*c)字符串操作函数:
i. length
ii. sub_string(start, end),获取从 start(以 0 为 base)到 end 的子字符串(新生成的字符
串)*>
d)程序控制函数:exit(程序退出)
7. 其他
a) 支持//...和/*...*/两种注释格式
b) 程序运行入口点为 int main(..)函数,参数类型不限,当有多个入口时,启动时界面报错
c) 程序执行到 exit 时退出。如果没有 exit,则在 main 函数退出时,程序退出
d) 数组读写访问越界时,运行界面需要报错要求:
1. 实现一个 GUI,能够完成:
a.
程序编辑:创建、修改、保存、打开程序。可选:多文件工程的支持;
b. 程序运行:解释运行程序,从入口函数一直执行到程序结束,并且根据程序代码从标准输
入输出设备上输入或者输出信息,可选:多文件工程的支持;
c.
单步调试:按照执行的顺序,依次高亮显示当前语法单元(当前语法单元指的是,当前正
在被运算的函数、语句或者表达式中被计算的那部分,比如 x=x+y,就应该依次高亮
“x+y”和“x=x+y”)。可选:变量值的实时显示。
2. 如果遇到语法错误,需要有相应的错误提示;
3. 字符串、数组和字典的赋值操作含义由参赛者自行定义,请在软件 readme 以及代码实现处标注说
明;
4. 运行时,需要允许用户执行“暂停”、“继续”、“终止”等操作 ;
5. 允许在程序代码上设置断点来暂停程序执行;
6. 需要显示出函数的进出、内存分配和释放的日志;
7. 对软件本身做单元测试;
8. 要求有设计文档,对软件架构和设计思想有简单说明(3~5 页即可);
9. 使用到开源软件代码的,需要标明出处,并且需要遵守开源协议;
10. 界面友好;
11. 代码符合规范。
评分标准(总分 150 分):
|----------------------------------------|
|标准								|分数|
|能够实现编辑功能					|10	 |
|能够正确解释执行程序					|30  |
|能够正确实现单步调试功能				|20  |
|能够正确输入、输出数据,正确输出日志	|10  |
|设计文档规范易懂					|20  |
|实现自身的单元测试功能				|15  |
|代码规范度							|15  |
|附加分(用户界面友好,实现附加功能)	|30  |
|----------------------------------------|
